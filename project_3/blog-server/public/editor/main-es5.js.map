{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog.service.ts","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/preview/preview.component.ts","webpack:///src/app/preview/preview.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BlogService","http","httpOptions","headers","withCredentials","username","url","get","postid","body","post","put","draft","providedIn","Post","EditComponent","blogService","route","router","cookie","document","slice","parseJWT","usr","disabled","getCurrentDraft","paramMap","subscribe","snapshot","getPost","parseInt","token","base64Url","split","base64","replace","JSON","parse","atob","event","titleValue","target","value","bodyValue","resp","deletePost","navigate","modifiedPost","created","modified","updatePost","child","fetchPosts","setCurrentDraft","num","unixEpoch","date","Date","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","convertToTwoDigits","getMinutes","seconds","getSeconds","ampm","ListComponent","posts","console","log","newPID","length","newPost","push","PreviewComponent","input","reader","writer","render","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListComponent } from './list/list.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { PreviewComponent } from './preview/preview.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ListComponent },\r\n  { path: 'edit/:id', component: EditComponent },\r\n  { path: 'preview/:id', component: PreviewComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-blog';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { EditComponent } from './edit/edit.component';\r\nimport { PreviewComponent } from './preview/preview.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, ListComponent, EditComponent, PreviewComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BlogService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET request to /api/:username and retrieve blog posts by user\r\n  fetchPosts(username: string): Observable<Post[]> {\r\n    const url = `/api/${username}`;\r\n    return this.http.get<Post[]>(url, this.httpOptions);\r\n  }\r\n\r\n  // GET request to /api/:username/:postid and retrieve particular post\r\n  getPost(username: string, postid: number): Observable<Post> {\r\n    const url = `/api/${username}/${postid}`;\r\n\r\n    return this.http.get<Post>(url, this.httpOptions);\r\n  }\r\n\r\n  // POST request to /api/:username/:postid to save new post in server\r\n  newPost(username: string, postid: number): Observable<void> {\r\n    const url = `/api/${username}/${postid}`;\r\n    const body = {\r\n      title: '',\r\n      body: '',\r\n    };\r\n\r\n    return this.http.post<void>(url, body, this.httpOptions);\r\n  }\r\n\r\n  // PUT request to /api/:username/:postid to update corresponding post\r\n  updatePost(username: string, post: Post): Observable<void> {\r\n    const url = `/api/${username}/${post.postid}`;\r\n\r\n    return this.http.put<void>(url, post, this.httpOptions);\r\n  }\r\n\r\n  // DELETE request to /api/:username/:postid to delete corresponding post\r\n  deletePost(username: string, postid: number): Observable<void> {\r\n    const url = `/api/${username}/${postid}`;\r\n\r\n    return this.http.delete<void>(url, this.httpOptions);\r\n  }\r\n\r\n  private draft: Post;\r\n\r\n  // Save post as current \"draft\", so that it can be returned later when getCurrentDraft() is called\r\n  setCurrentDraft(post: Post): void {\r\n    this.draft = post;\r\n  }\r\n\r\n  // Return draft saved in setCurrentDraft(), return null if setCurrentDraft() was never called\r\n  getCurrentDraft(): Post {\r\n    return this.draft;\r\n  }\r\n}\r\n\r\nexport class Post {\r\n  postid: number;\r\n  created: Date;\r\n  modified: Date;\r\n  title: string;\r\n  body: string;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ListComponent } from '../list/list.component';\r\n\r\nimport { Post, BlogService } from '../blog.service';\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css'],\r\n})\r\nexport class EditComponent implements OnInit {\r\n  private cookie = document.cookie.slice(4);\r\n  private username = this.parseJWT(this.cookie).usr;\r\n\r\n  @ViewChild(ListComponent, { static: false }) child;\r\n\r\n  constructor(\r\n    private blogService: BlogService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrentDraft();\r\n    this.route.paramMap.subscribe(() => {\r\n      const id = this.route.snapshot.paramMap.get('id');\r\n      this.blogService\r\n        .getPost(this.username, parseInt(id))\r\n        .subscribe((post) => {\r\n          this.draft = post;\r\n        });\r\n    });\r\n  }\r\n\r\n  parseJWT(token: string) {\r\n    let base64Url = token.split('.')[1];\r\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    return JSON.parse(atob(base64));\r\n  }\r\n\r\n  draft: Post;\r\n  titleValue: string;\r\n  bodyValue: string;\r\n  disabled: boolean = true;\r\n\r\n  onTitleChange(event): void {\r\n    this.disabled = false;\r\n    this.titleValue = event.target.value;\r\n  }\r\n\r\n  onBodyChange(event): void {\r\n    this.disabled = false;\r\n    this.bodyValue = event.target.value;\r\n  }\r\n\r\n  getCurrentDraft(): void {\r\n    let resp = this.blogService.getCurrentDraft();\r\n\r\n    if (resp === null) {\r\n      const id = this.route.snapshot.paramMap.get('id');\r\n      this.blogService\r\n        .getPost(this.username, parseInt(id))\r\n        .subscribe((post) => {\r\n          this.draft = post;\r\n        });\r\n    } else {\r\n      this.draft = resp;\r\n    }\r\n  }\r\n\r\n  deletePost(): void {\r\n    this.blogService.deletePost(this.username, this.draft.postid).subscribe();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  updatePost(): void {\r\n    let modifiedPost = {\r\n      postid: this.draft.postid,\r\n      created: this.draft.created,\r\n      modified: this.draft.modified,\r\n      title: this.titleValue ? this.titleValue : this.draft.title,\r\n      body: this.bodyValue ? this.bodyValue : this.draft.body,\r\n    };\r\n\r\n    this.blogService.updatePost(this.username, modifiedPost).subscribe();\r\n\r\n    const id = this.route.snapshot.paramMap.get('id');\r\n    this.blogService.getPost(this.username, parseInt(id)).subscribe((post) => {\r\n      this.draft = post;\r\n    });\r\n\r\n    this.child.fetchPosts();\r\n\r\n    this.disabled = true;\r\n  }\r\n\r\n  previewPost(): void {\r\n    let modifiedPost = {\r\n      postid: this.draft.postid,\r\n      created: this.draft.created,\r\n      modified: this.draft.modified,\r\n      title: this.titleValue ? this.titleValue : this.draft.title,\r\n      body: this.bodyValue ? this.bodyValue : this.draft.body,\r\n    };\r\n\r\n    this.blogService.setCurrentDraft(modifiedPost);\r\n\r\n    if (this.titleValue || this.bodyValue) {\r\n      this.blogService.updatePost(this.username, modifiedPost).subscribe();\r\n    }\r\n\r\n    this.router.navigate([`/preview/${this.draft.postid}`]);\r\n  }\r\n\r\n  convertToTwoDigits(num: number): string {\r\n    if (num < 10) {\r\n      return `0${num}`;\r\n    } else {\r\n      return `${num}`;\r\n    }\r\n  }\r\n\r\n  formatDate(unixEpoch: Date): string {\r\n    const date = new Date(unixEpoch);\r\n    let month = date.getMonth();\r\n    let day = date.getDate();\r\n    const year = date.getFullYear();\r\n    let hours = date.getHours();\r\n    let minutes = this.convertToTwoDigits(date.getMinutes());\r\n    let seconds = this.convertToTwoDigits(date.getSeconds());\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n\r\n    return `${month}/${day}/${year} ${hours}:${minutes}:${seconds} ${ampm}`;\r\n  }\r\n}\r\n","<div *ngIf=\"draft\" class=\"edit-wrapper\">\r\n  <app-list></app-list>\r\n  <div class=\"edit-form\">\r\n    <label for=\"title\">Title:</label>\r\n    <input\r\n      id=\"title\"\r\n      style=\"height: 40px; width: 300px;\"\r\n      value=\"{{ draft.title }}\"\r\n      class=\"form-control\"\r\n      (input)=\"onTitleChange($event)\"\r\n    />\r\n    <label for=\"body\" style=\"margin-top: 10px;\">Body:</label>\r\n    <textarea\r\n      id=\"body\"\r\n      style=\"height: 160px; width: 300px;\"\r\n      value=\"{{ draft.body }}\"\r\n      class=\"form-control\"\r\n      (input)=\"onBodyChange($event)\"\r\n    ></textarea>\r\n    <div class=\"last-modified\">\r\n      Last Modified: {{ formatDate(draft.modified) }}\r\n    </div>\r\n    <div class=\"edit-button-row\">\r\n      <button type=\"button\" class=\"btn btn-danger\" (click)=\"deletePost()\">\r\n        Delete\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success\"\r\n        [disabled]=\"disabled\"\r\n        (click)=\"updatePost()\"\r\n      >\r\n        Save\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-info\" (click)=\"previewPost()\">\r\n        Preview\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Post, BlogService } from '../blog.service';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css'],\r\n})\r\nexport class ListComponent implements OnInit {\r\n  private cookie = document.cookie.slice(4);\r\n  private username = this.parseJWT(this.cookie).usr;\r\n  posts: Post[];\r\n\r\n  constructor(private blogService: BlogService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchPosts();\r\n  }\r\n\r\n  parseJWT(token: string) {\r\n    let base64Url = token.split('.')[1];\r\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    return JSON.parse(atob(base64));\r\n  }\r\n\r\n  fetchPosts(): void {\r\n    this.blogService.fetchPosts(this.username).subscribe((posts) => {\r\n      this.posts = posts;\r\n      console.log(this.posts);\r\n    });\r\n  }\r\n\r\n  setCurrentDraft(post: Post): void {\r\n    this.blogService.setCurrentDraft(post);\r\n    this.router.navigate([`/edit/${post.postid}`]);\r\n  }\r\n\r\n  newPost() {\r\n    let newPID = this.posts[this.posts.length - 1].postid + 1;\r\n    this.blogService.newPost(this.username, newPID).subscribe();\r\n    this.blogService.getPost(this.username, newPID).subscribe((post) => {\r\n      this.posts.push(post);\r\n      this.blogService.setCurrentDraft(post);\r\n    });\r\n    this.router.navigate([`/edit/${newPID}`]);\r\n  }\r\n\r\n  convertToTwoDigits(num: number): string {\r\n    if (num < 10) {\r\n      return `0${num}`;\r\n    } else {\r\n      return `${num}`;\r\n    }\r\n  }\r\n\r\n  formatDate(unixEpoch: number): string {\r\n    const date = new Date(unixEpoch);\r\n    let month = date.getMonth();\r\n    let day = date.getDate();\r\n    const year = date.getFullYear();\r\n    let hours = date.getHours();\r\n    let minutes = this.convertToTwoDigits(date.getMinutes());\r\n    let seconds = this.convertToTwoDigits(date.getSeconds());\r\n    let ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n\r\n    return `${month}/${day}/${year} ${hours}:${minutes}:${seconds} ${ampm}`;\r\n  }\r\n}\r\n","<div *ngIf=\"posts\" class=\"list-wrapper\">\r\n  <button type=\"button\" class=\"btn btn-primary\" (click)=\"newPost()\">\r\n    New Post\r\n  </button>\r\n  <div class=\"list-component\">\r\n    <div\r\n      *ngFor=\"let post of posts\"\r\n      (click)=\"setCurrentDraft(post)\"\r\n      class=\"list-element\"\r\n    >\r\n      <div class=\"blog-card\">\r\n        <div>{{ formatDate(post.created) }}</div>\r\n        <div>{{ post.title }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Parser, HtmlRenderer } from 'commonmark';\r\n\r\nimport { Post, BlogService } from '../blog.service';\r\n\r\n@Component({\r\n  selector: 'app-preview',\r\n  templateUrl: './preview.component.html',\r\n  styleUrls: ['./preview.component.css'],\r\n})\r\nexport class PreviewComponent implements OnInit {\r\n  private cookie = document.cookie.slice(4);\r\n  private username = this.parseJWT(this.cookie).usr;\r\n\r\n  constructor(\r\n    private blogService: BlogService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrentDraft();\r\n    this.route.paramMap.subscribe(() => {\r\n      const id = this.route.snapshot.paramMap.get('id');\r\n      this.blogService\r\n        .getPost(this.username, parseInt(id))\r\n        .subscribe((post) => {\r\n          this.draft = post;\r\n        });\r\n    });\r\n  }\r\n\r\n  draft: Post;\r\n\r\n  parseJWT(token: string) {\r\n    let base64Url = token.split('.')[1];\r\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    return JSON.parse(atob(base64));\r\n  }\r\n\r\n  getCurrentDraft(): void {\r\n    this.draft = this.blogService.getCurrentDraft();\r\n  }\r\n\r\n  renderMarkup(input: string): string {\r\n    let reader = new Parser();\r\n    let writer = new HtmlRenderer();\r\n\r\n    return writer.render(reader.parse(input));\r\n  }\r\n\r\n  switchToEdit(): void {\r\n    this.router.navigate([`/edit/${this.draft.postid}`]);\r\n  }\r\n}\r\n","<div *ngIf=\"draft\" class=\"preview-wrapper\">\r\n  <app-list></app-list>\r\n  <div class=\"preview-form\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-warning\"\r\n      (click)=\"switchToEdit()\"\r\n      style=\"width: 100px;\"\r\n    >\r\n      Edit\r\n    </button>\r\n    <div class=\"preview-content\">\r\n      <div [innerHTML]=\"renderMarkup(draft.title)\"></div>\r\n      <div [innerHTML]=\"renderMarkup(draft.body)\"></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}